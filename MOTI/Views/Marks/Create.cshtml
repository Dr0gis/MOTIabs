@model MOTI.Mark

@{
    ViewBag.Title = "Создать";
}

<h2>Создать</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Оценка</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="IdCrit">Название критерия</label>
            <!--@Html.LabelFor(model => model.IdCrit, "IdCrit", htmlAttributes: new { @class = "control-label col-md-2", required = "required" })-->
            <div class="col-md-10">
                @Html.DropDownList("IdCrit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCrit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="MName">Название оценки</label>
            <!--@Html.LabelFor(model => model.MName, htmlAttributes: new { @class = "control-label col-md-2" })-->
            <div class="col-md-10">
                @Html.EditorFor(model => model.MName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.MName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--<div class="form-group">
            @Html.LabelFor(model => model.MRange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MRange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MRange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumMark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumMark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumMark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NormMark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NormMark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NormMark, "", new { @class = "text-danger" })
            </div>
        </div>-->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div>
@{
    foreach (var crit in ViewBag.IdCrit)
    {
        <div id="Crit_@crit.Value" class="disabled">
            <table class="table">
                <tr>
                    <th>
                        Сущестующая Оценка
                    </th>
                    <th>
                    </th>
                </tr>
                @{foreach (Mark mark in ViewBag.Marks)
                    {
                        if (mark.IdCrit == Int32.Parse(crit.Value))
                        {
                            <tr>
                                <td>
                                    @mark.MName
                                </td>
                                <td>
                                    @Html.ActionLink("Редактировать", "Edit", new { id = mark.IdMark }) |
                                    @Html.ActionLink("Свойства", "Details", new { id = mark.IdMark }) |
                                    @Html.ActionLink("Удалить", "Delete", new { id = mark.IdMark })
                                </td>
                            </tr>
                        }
                    }
                }
            </table>
        </div>
    }
 }
    </div>
}
<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            viewTable();
            $("#IdCrit").change(viewTable);
        });      
        function viewTable() {
            //var options = document.getElementsByTagName("option");
            var select = $("#IdCrit");
            var options = select.find("option");
            for (var nodeId = 0; nodeId < options.length; ++nodeId) {
                var critDiv = $("#Crit_" + options[nodeId].value);
                if (options[nodeId].selected == true) {
                    critDiv.css( "display", "block");
                }             
                else {
                    critDiv.css( "display", "none");
                }
            }            
        }
    </script>
}
